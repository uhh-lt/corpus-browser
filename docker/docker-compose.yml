version: "3.3"

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    environment:
      # see https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-network.html
      # use 127.0.0.1 to access the ES node from OUTSIDE of the docker network (e.g. when ssh tunneling to ltdocker)
      # network.publish_host=127.0.0.1
      # http.publish_port=${ELASTICSEARCH_EXPOSED_PORT:-9200}
      - xpack.security.enabled=false # no auth
      - discovery.type=single-node # single node cluster
      - http.cors.enabled=true
      - http.cors.allow-origin='*'
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization,x-elastic-client-meta
      - http.cors.allow-credentials=true
      - ES_JAVA_OPTS=-Xms4096m -Xmx4096m
      - ES_SETTING_CLUSTER_NAME=docker-cluster
      - ES_SETTING_NETWORK_HOST=0.0.0.0
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "${ELASTICSEARCH_EXPOSED:-9200}:9200"
    networks:
      - corpos_browser_network
    profiles:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    ports:
      - "${KIBANA_EXPOSED:-5601}:5601"
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: '["http://elasticsearch:9200"]'
    networks:
      - corpos_browser_network
    depends_on:
      - elasticsearch
    profiles:
      - kibana

  corpus-browser-frontend:
    image: uhhlt/dwts_frontend:${DWTS_FRONTEND_DOCKER_VERSION:-latest}
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - elasticsearch
    ports:
      - "${FRONTEND_EXPOSED:-3000}:3000"
    networks:
      - corpos_browser_network
    profiles:
      - frontend

volumes:
  elasticsearch_data:
    driver: local

networks:
  corpos_browser_network:
